name: Code Quality
on:
  pull_request:
    branches: [develop]
    types: [opened, reopened, synchronize]
  workflow_dispatch:
jobs:
  quality:
    name: Lint and test
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed project files (lint)
        id: changed-project-lint
        uses: tj-actions/changed-files@v41
        with:
          files: |
            **/*.{js,ts,tsx}
            .github/workflows/code-quality.yml
          files_ignore: |
            .eslintrc.js,
            jest.config.js,
            next.config.js,
            postcss.config.js,
            .prettierrc.js,
            tailwind.config.js

      - name: Get changed project files (test)
        id: changed-project-test
        uses: tj-actions/changed-files@v41
        with:
          files: |
            **/*.{js,ts,tsx}
            .github/workflows/code-quality.yml
            package.json
            yarn.lock
          files_ignore: |
            .eslintrc.js,
            postcss.config.js,
            tailwind.config.js

      - name: Get changed markdown files
        id: changed-markdown
        uses: tj-actions/changed-files@v41
        with:
          files: |
            **/*.md
            .github/workflows/code-quality.yml

      - name: Setup Node JS
        if: steps.changed-project-test.outputs.any_modified == 'true' || steps.changed-project-lint.outputs.any_modified == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VERSION || 'latest' }}
          cache: 'yarn'

      - name: Install dependencies
        if: steps.changed-project-test.outputs.any_modified == 'true' || steps.changed-project-lint.outputs.any_modified == 'true'
        run: |
          echo "::group::Node version"
          echo 'node version requested: ${{ vars.NODE_VERSION || 'latest' }}'
          echo 'node version: '$(node --version)
          echo "::endgroup::"

          version=$(yarn --version)
          requested_version=${{ vars.YARN_VERSION || 'latest' }}

          if [ version != requested_version ]
          then
            yarn set version ${requested_version}
          fi

          echo "::group::Yarn version"
          echo 'initial yarn version: '${version}
          echo 'yarn version requested: '${requested_version}
          echo 'yarn version: '$(yarn --version)
          echo "::endgroup::"

          yarn install --immutable
        shell: bash

      - name: Lint all Documentation
        if: steps.changed-markdown.outputs.any_modified == 'true'
        uses: DavidAnson/markdownlint-cli2-action@v14
        with:
          globs: |
            **/*.md
            !**/node_modules/**

      - name: Lint project
        if: steps.changed-project-lint.outputs.any_modified == 'true'
        env:
          WP_DOMAIN: ${{ vars.WP_DOMAIN }}
          WP_API_URL: http://${{ vars.WP_DOMAIN }}
          GRAPHQL_URL: http://${{ vars.WP_DOMAIN }}/graphql
        run: yarn lint
        shell: bash

      - name: Run Jest
        if: steps.changed-project-test.outputs.any_modified == 'true'
        env:
          WP_DOMAIN: ${{ vars.WP_DOMAIN }}
          WP_API_URL: http://${{ vars.WP_DOMAIN }}
          GRAPHQL_URL: http://${{ vars.WP_DOMAIN }}/graphql
        run: yarn test:unit --coverage=true
        shell: bash

      - name: Get the coverage file.
        if: steps.changed-project-test.outputs.any_modified == 'true'
        run: |
          branch=${GITHUB_HEAD_REF}
          coverage_branch=${branch//[\":<>|*?\\\/]/-}
          coverage_dir=coverage-${coverage_branch}
          mkdir -p ${coverage_dir} && sudo cp -r coverage ${coverage_dir}

          echo "coverage_branch=${coverage_branch}" >> $GITHUB_OUTPUT
          echo "coverage_dir=${coverage_dir}" >> $GITHUB_OUTPUT

          echo "::group::Coverage Data"
          echo 'branch: '${coverage_branch}
          echo 'dir: '${coverage_dir}
          echo "::endgroup::"
        shell: bash
        id: coverage

      - name: Upload the Coverage as an artifact
        if: steps.changed-project-test.outputs.any_modified == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.coverage.outputs.coverage_branch }}-test-coverage
          path: ${{ steps.coverage.outputs.coverage_dir }}
          retention-days: ${{ inputs.retention-days }}

      # - name: Run Playwright tests
      #   if: steps.changed-project-test.outputs.any_modified == 'true'
      #   run: yarn test:e2e

      - name: Default Job Success
        if: steps.changed-project-test.outputs.any_modified != 'true' && steps.changed-project-lint.outputs.any_modified != 'true' && steps.changed-markdown.outputs.any_modified != 'true'
        run: exit 0
        shell: bash
